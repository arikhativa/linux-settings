
# ubuntu
# maybe add this for the ctrl + . issue
# gsettings set org.freedesktop.ibus.panel.emoji hotkey "[]"
#export REACT_EDITOR=code
alias padmin='cd ~/avodaplusbackend/prisma && npx prisma admin && cd -'
alias preset='cd ~/avodaplusbackend/prisma && echo y | npx prisma delete && cd - && yarn prisma'
alias pseed='cd ~/avodaplusbackend/prisma && npx prisma reset -f && npx prisma seed && cd -'

# docker
alias dlog='docker logs '
alias dls='docker image ls'
alias dps='docker ps -a'
alias drmall='docker rm -f $(docker ps -a -q)'
alias drm='docker rm -f '
alias dx='docker exec -it '
alias dc='docker compose '
alias dcrmall='docker compose down --volumes --rmi local'


# git
alias gl='git log'
alias add='git add .'
alias cmt='git commit -m '
alias ccmt='git commit --amend'
alias push='git push'
alias pull='git pull'
alias gco='git checkout'
alias stt='git status'
alias gc='git clone'
alias gr='git rebase -i'
alias gra='git rebase --abort'
alias grc='git rebase --continue'
alias gcp='git cherry-pick '
alias grh='git reset --hard '
alias gs='git stash'
alias gsa='git stash apply'

# github
alias phub='git push  https://github.com/arikhativa/$(basename `git rev-parse --show-toplevel`)'
alias pullhub='git pull  https://github.com/arikhativa/$(basename `git rev-parse --show-toplevel`)'

# files
alias myalias='nvim ~/linux-settings/extra_alias'
alias mynvim='nvim ~/.config/nvim/'
alias mycode='cd ~/.config/Code/User/'
alias mycodek='code ~/.config/Code/User/keybindings.json'
alias mycodek='code ~/.config/Code/User/keybindings.json'

# 42
#alias code="$(find /Applications -name "code" 2> /dev/null | grep bin | sed 's/ /\\ /g')"
alias norm='norminette | grep -v OK'
alias g='gcc -Wall -Werror -Wextra'
alias gp='g++ -Wall -Werror -Wextra'

# Shell
alias t='touch '
alias c='cat '
alias val='valgrind --track-fds=yes --leak-check=full --show-leak-kinds=all --track-origins=yes --log-file=/tmp/val.log'
alias hel='valgrind --log-file=/tmp/val.log --tool=helgrind'
alias vlog='code /tmp/val.log'


# kde screen adjust
alias screen='~/.scripts/monitor_attached_script.sh'

#clipboard
if [ -n "$WSL_DISTRO_NAME" ]; then
	alias "copy=clip.exe"
	alias "v=xclip -o"
	alias "cb=git rev-parse --abbrev-ref HEAD | copy"
else
	alias "copy=xclip -selection clipboard"
	alias "v=xclip -o"
	alias "cb=git rev-parse --abbrev-ref HEAD | copy"
fi

to_ssh() {
    # Get current remote URL
    current_url=$(git remote get-url origin)

    # Check if it's an HTTPS GitHub URL
    if [[ "$current_url" =~ ^https://github\.com/ ]]; then
        # Convert to SSH format
        ssh_url=$(echo "$current_url" | sed -E 's#https://github.com/#git@github.com:#')

        # Set the new SSH URL as the remote origin
        git remote set-url origin "$ssh_url"

        echo "Updated remote origin to SSH: $ssh_url"
    else
        echo "Current remote is not an HTTPS GitHub URL: $current_url"
    fi
}

